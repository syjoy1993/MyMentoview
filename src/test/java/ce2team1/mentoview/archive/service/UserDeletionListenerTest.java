package ce2team1.mentoview.archive.service;

import ce2team1.mentoview.archive.entity.InterviewArchive;
import ce2team1.mentoview.archive.repository.InterviewArchiveRepository;
import ce2team1.mentoview.archive.repository.PaymentArchiveRepository;
import ce2team1.mentoview.archive.repository.UserArchiveRepository;
import ce2team1.mentoview.entity.Interview;
import ce2team1.mentoview.entity.Payment;
import ce2team1.mentoview.entity.Resume;
import ce2team1.mentoview.entity.Subscription;
import ce2team1.mentoview.repository.*;
import ce2team1.mentoview.service.AwsS3Service;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.ApplicationEventPublisher;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
@SpringBootTest
@Transactional
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
class UserDeletionListenerTest {

    @Autowired
    private InterviewRepository interviewRepository;
    @Autowired
    private ResumeRepository resumeRepository;
    @Autowired
    private PaymentArchiveRepository paymentArchiveRepository;
    @Autowired
    private PaymentRepository paymentRepository;
    @Autowired
    private SubscriptionRepository subscriptionRepository;
    @Autowired
    private AwsS3Service awsS3Service;
    @Autowired
    private UserRepository userRepository;
    @Autowired
    private UserArchiveRepository userArchiveRepository ;
    @Autowired
    private InterviewArchiveRepository archiveRepository;
    @Autowired
    private ArchiveService archiveService;
    @Autowired
    private UserDeletionListener  userDeletionListener;

    @Autowired
    private ApplicationEventPublisher eventPublisher; // Ïù¥Î≤§Ìä∏Î•º Ìä∏Î¶¨Í±∞ÌïòÎäî Ïó≠Ìï†






    @Test
    public void archive() {
        Long userId = 13L;
        // Ïù¥Î≤§Ìä∏ Í∞ùÏ≤¥
        UserDeletedEvent event = new UserDeletedEvent(userId);

        // Ïù¥Î≤§Ìä∏ Î∞úÌñâ
        eventPublisher.publishEvent(event);

        //Listener Ìò∏Ï∂ú
        userDeletionListener.deleteUserAfterArchiving(event);

    }

    @Test
    @DisplayName("üîç UserDeletionListener ÎèôÏûë ÌÖåÏä§Ìä∏ - Ïú†Ï†Ä ÏÇ≠Ï†ú")
    public void testDeleteUserAfterArchiving() {
        //  Ïú†Ï†Ä ID
        Long userId = 29L;

        // ÏÇ≠Ï†ú Ï†Ñ
        long resumeCountBefore = resumeRepository.count();
        long interviewCountBefore = interviewRepository.count();
        long paymentCountBefore = paymentRepository.count();
        long subscriptionCountBefore = subscriptionRepository.count();
        long userCountBefore = userRepository.count();

        System.out.println(" ÏÇ≠Ï†ú Ï†Ñ Îç∞Ïù¥ÌÑ∞ Í∞úÏàò");
        System.out.println("Resumes: " + resumeCountBefore);
        System.out.println("Interviews: " + interviewCountBefore);
        System.out.println("Payments: " + paymentCountBefore);
        System.out.println("Subscriptions: " + subscriptionCountBefore);
        System.out.println("Users: " + userCountBefore);

        //  ÏÇ≠Ï†ú Ïù¥Î≤§Ìä∏ Î∞úÌñâ
        eventPublisher.publishEvent(new UserDeletedEvent(userId));

        // (Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ìò∏Ï∂ú
        userDeletionListener.deleteUserAfterArchiving(new UserDeletedEvent(userId));

        // ÏÇ≠Ï†ú ÌõÑ Í∞úÏàò
        long resumeCountAfter = resumeRepository.count();
        long interviewCountAfter = interviewRepository.count();
        long paymentCountAfter = paymentRepository.count();
        long subscriptionCountAfter = subscriptionRepository.count();
        long userCountAfter = userRepository.count();

        System.out.println(" ÏÇ≠Ï†ú ÌõÑ Îç∞Ïù¥ÌÑ∞ Í∞úÏàò");
        System.out.println("Resumes: " + resumeCountAfter);
        System.out.println("Interviews: " + interviewCountAfter);
        System.out.println("Payments: " + paymentCountAfter);
        System.out.println("Subscriptions: " + subscriptionCountAfter);
        System.out.println("Users: " + userCountAfter);

        //Í≤ÄÏ¶ù
        Assertions.assertEquals(resumeCountBefore - 1, resumeCountAfter, "Resume ÏÇ≠Ï†ú Ïã§Ìå®");
        Assertions.assertEquals(interviewCountBefore - 1, interviewCountAfter, "Interview ÏÇ≠Ï†ú Ïã§Ìå®");
        Assertions.assertEquals(paymentCountBefore - 1, paymentCountAfter, "Payment ÏÇ≠Ï†ú Ïã§Ìå®");
        Assertions.assertEquals(subscriptionCountBefore - 1, subscriptionCountAfter, "Subscription ÏÇ≠Ï†ú Ïã§Ìå®");
        Assertions.assertEquals(userCountBefore - 1, userCountAfter, "User ÏÇ≠Ï†ú Ïã§Ìå®");
    }

}